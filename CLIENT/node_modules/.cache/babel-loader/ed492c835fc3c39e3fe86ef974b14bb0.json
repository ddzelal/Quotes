{"ast":null,"code":"var _jsxFileName = \"/home/dzelal/Desktop/DzelalDesktop/reactFolder/qoutes-app-inter/src/components/DisplayQuotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from \"react\";\nimport \"./displayQuotes.css\";\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport QuoteCard from \"./QuoteCard\";\nimport FilterBy from \"./FilterBy\";\nimport FormQuotes from \"./FormQuotes\";\nimport { UserContext } from \"../context/UserContext\";\nimport { getCookie } from \"../utils\";\nimport api from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DisplayQuotes() {\n  _s();\n\n  const {\n    token\n  } = useContext(UserContext);\n  console.log(\"token\", token);\n  const [quotes, setQuotes] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [displayOnOf, setDisplayOnOf] = useState(false);\n\n  function showResults() {\n    setDisplayOnOf(!displayOnOf);\n  }\n\n  const submitHandler = useCallback(async params => {\n    setFilters(oldValue => ({ ...oldValue,\n      ...params\n    }));\n  }, []);\n\n  const updateQuote = quote => {\n    setQuotes(quotes.map(q => {\n      if (q.id === quote.id) {\n        return { ...quote\n        };\n      }\n\n      return q;\n    }));\n  }; // useEffect(() => {\n  //   (async () => {\n  //     try {\n  //       const [quotesRes, tagsRes] = await Promise.all([\n  //         api.getQuotes(),\n  //         getTags(),\n  //       ]);\n  //       setQuotes(quotesRes);\n  //       setTags(tagsRes);\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   })();\n  // }, [, getTags]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-display\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-display-quotes\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showResults,\n        children: \"ADD QUOTES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), displayOnOf ? /*#__PURE__*/_jsxDEV(FormQuotes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          const res = await api.getQuotes(filters);\n          setQuotes(res);\n        },\n        children: \"SEARCH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-tags-by\",\n        children: [/*#__PURE__*/_jsxDEV(FilterBy, {\n          tags: tags,\n          submitHandler: submitHandler,\n          by: \"tags\",\n          multiple: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterBy, {\n          tags: [\"createdAt\", \"author\", \"upvotesCount\"],\n          submitHandler: submitHandler,\n          by: \"sortBy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), quotes.length ? quotes.map((quote, i) => {\n        return /*#__PURE__*/_jsxDEV(QuoteCard, {\n          quote: quote,\n          getQuotes: api.getQuotes,\n          updateQuote: updateQuote\n        }, quote.id + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No quotes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DisplayQuotes, \"40h+Nv754SQrmecEjkGDpx9F7UA=\");\n\n_c = DisplayQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayQuotes\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useContext","axios","QuoteCard","FilterBy","FormQuotes","UserContext","getCookie","api","DisplayQuotes","token","console","log","quotes","setQuotes","tags","setTags","filters","setFilters","displayOnOf","setDisplayOnOf","showResults","submitHandler","params","oldValue","updateQuote","quote","map","q","id","res","getQuotes","length","i"],"sources":["/home/dzelal/Desktop/DzelalDesktop/reactFolder/qoutes-app-inter/src/components/DisplayQuotes.js"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport \"./displayQuotes.css\";\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport QuoteCard from \"./QuoteCard\";\nimport FilterBy from \"./FilterBy\";\nimport FormQuotes from \"./FormQuotes\";\nimport { UserContext } from \"../context/UserContext\";\nimport { getCookie } from \"../utils\";\nimport api from \"../api\";\n\nexport default function DisplayQuotes() {\n  const { token } = useContext(UserContext);\n  console.log(\"token\", token);\n\n  const [quotes, setQuotes] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [displayOnOf, setDisplayOnOf] = useState(false);\n  function showResults() {\n    setDisplayOnOf(!displayOnOf);\n  }\n\n\n  const submitHandler = useCallback(async (params) => {\n    setFilters((oldValue) => ({ ...oldValue, ...params }));\n  }, []);\n\n  const updateQuote = (quote) => {\n    setQuotes(\n      quotes.map((q) => {\n        if (q.id === quote.id) {\n          return { ...quote };\n        }\n        return q;\n      })\n    );\n  };\n\n  // useEffect(() => {\n  //   (async () => {\n  //     try {\n  //       const [quotesRes, tagsRes] = await Promise.all([\n  //         api.getQuotes(),\n  //         getTags(),\n  //       ]);\n\n  //       setQuotes(quotesRes);\n  //       setTags(tagsRes);\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   })();\n  // }, [, getTags]);\n\n  return (\n    <div className=\"container-display\">\n      <div className=\"container-display-quotes\">\n        <button onClick={showResults}>ADD QUOTES</button>\n        {displayOnOf ? <FormQuotes /> : null}\n        <button\n          onClick={async () => {\n            const res = await api.getQuotes(filters);\n            setQuotes(res);\n          }}\n        >\n          SEARCH\n        </button>\n        <div className=\"container-tags-by\">\n          <FilterBy\n            tags={tags}\n            submitHandler={submitHandler}\n            by=\"tags\"\n            multiple={true}\n          />\n          <FilterBy\n            tags={[\"createdAt\", \"author\", \"upvotesCount\"]}\n            submitHandler={submitHandler}\n            by=\"sortBy\"\n          />\n        </div>\n\n        {quotes.length ? (\n          quotes.map((quote, i) => {\n            return (\n              <QuoteCard\n                key={quote.id + i}\n                quote={quote}\n                getQuotes={api.getQuotes}\n                updateQuote={updateQuote}\n              />\n            );\n          })\n        ) : (\n          <h1>No quotes</h1>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}