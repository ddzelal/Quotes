{"ast":null,"code":"import axios from \"axios\";\nimport { getTokenFromStorage } from \"../helpers\";\nconst baseUrl = process.env;\n\nconst getQuotes = async function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let paramsStr = \"\";\n  Object.keys(params).forEach(key => {\n    var _params$key;\n\n    paramsStr = paramsStr + key + \"=\" + ((_params$key = params[key]) === null || _params$key === void 0 ? void 0 : _params$key.join(\",\")) + \"&\";\n  });\n  const res = await axios.get(`http://localhost:8000/quotes${paramsStr && \"?\" + paramsStr}`, {\n    headers: {\n      Authorization: \"Bearer \" + getTokenFromStorage()\n    }\n  });\n  return res.data.quotes;\n};\n\nconst getTags = async () => {\n  const res = await axios.get(\"http://localhost:8000/tags\", {\n    headers: {\n      Authorization: \"Bearer \" + getTokenFromStorage()\n    }\n  });\n  return res.data;\n};\n\nconst login = async user => {\n  return await axios.post(\"http://localhost:8000/sessions\", user);\n};\n\nconst addQuote = async data => {\n  return await axios.post(\"http://localhost:8000/quotes\", data, {\n    headers: {\n      Authorization: \"Bearer \" + getTokenFromStorage()\n    }\n  });\n};\n\nconst deleteVote = async quote => {\n  return await axios.delete(`http://localhost:8000/quotes/${quote.id}/${quote.givenVote}`, {\n    headers: {\n      Authorization: \"Bearer \" + getTokenFromStorage()\n    }\n  });\n};\n\nconst downVote = async quote => {\n  return await axios.post(`http://localhost:8000/quotes/${quote.id}/downvote`, null, {\n    headers: {\n      Authorization: \"Bearer \" + getTokenFromStorage()\n    }\n  });\n};\n\nconst upVote = async quote => {\n  return await axios.post(`http://localhost:8000/quotes/${quote.id}/upvote`, null, {\n    headers: {\n      Authorization: \"Bearer \" + getTokenFromStorage()\n    }\n  });\n};\n\nconst api = {\n  getQuotes,\n  addQuote,\n  getTags,\n  login,\n  deleteVote,\n  downVote,\n  upVote\n};\nexport default api;","map":{"version":3,"names":["axios","getTokenFromStorage","baseUrl","process","env","getQuotes","params","paramsStr","Object","keys","forEach","key","join","res","get","headers","Authorization","data","quotes","getTags","login","user","post","addQuote","deleteVote","quote","delete","id","givenVote","downVote","upVote","api"],"sources":["/home/dzelal/Desktop/DzelalDesktop/reactFolder/qoutes-app-inter/src/api/index.js"],"sourcesContent":["import axios from \"axios\";\nimport { getTokenFromStorage } from \"../helpers\";\n\nconst baseUrl = process.env\n\nconst getQuotes = async (params = {}) => {\n  let paramsStr = \"\";\n  Object.keys(params).forEach((key) => {\n    paramsStr = paramsStr + key + \"=\" + params[key]?.join(\",\") + \"&\";\n  });\n\n  const res = await axios.get(\n    `http://localhost:8000/quotes${paramsStr && \"?\" + paramsStr}`,\n    {\n      headers: { Authorization: \"Bearer \" + getTokenFromStorage() },\n    }\n  );\n\n  return res.data.quotes;\n};\n\nconst getTags = async () => {\n  const res = await axios.get(\"http://localhost:8000/tags\", {\n    headers: { Authorization: \"Bearer \" + getTokenFromStorage() },\n  });\n\n  return res.data;\n};\n\nconst login = async (user) => {\n  return await axios.post(\"http://localhost:8000/sessions\", user);\n};\n\nconst addQuote = async (data) => {\n  return await axios.post(\"http://localhost:8000/quotes\", data, {\n    headers: { Authorization: \"Bearer \" + getTokenFromStorage() },\n  });\n};\nconst deleteVote = async (quote) => {\n  return await axios.delete(\n    `http://localhost:8000/quotes/${quote.id}/${quote.givenVote}`,\n    { headers: { Authorization: \"Bearer \" + getTokenFromStorage() } }\n  );\n};\n\nconst downVote = async (quote) => {\n  return await axios.post(\n    `http://localhost:8000/quotes/${quote.id}/downvote`,\n    null,\n    { headers: { Authorization: \"Bearer \" + getTokenFromStorage() } }\n  );\n};\n\nconst upVote = async (quote) => {\n  return await axios.post(\n    `http://localhost:8000/quotes/${quote.id}/upvote`,\n    null,\n    { headers: { Authorization: \"Bearer \" + getTokenFromStorage() } }\n  );\n};\n\nconst api = {\n  getQuotes,\n  addQuote,\n  getTags,\n  login,\n  deleteVote,\n  downVote,\n  upVote,\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,YAApC;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAxB;;AAEA,MAAMC,SAAS,GAAG,kBAAuB;EAAA,IAAhBC,MAAgB,uEAAP,EAAO;EACvC,IAAIC,SAAS,GAAG,EAAhB;EACAC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA6BC,GAAD,IAAS;IAAA;;IACnCJ,SAAS,GAAGA,SAAS,GAAGI,GAAZ,GAAkB,GAAlB,mBAAwBL,MAAM,CAACK,GAAD,CAA9B,gDAAwB,YAAaC,IAAb,CAAkB,GAAlB,CAAxB,IAAiD,GAA7D;EACD,CAFD;EAIA,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CACf,+BAA8BP,SAAS,IAAI,MAAMA,SAAU,EAD5C,EAEhB;IACEQ,OAAO,EAAE;MAAEC,aAAa,EAAE,YAAYf,mBAAmB;IAAhD;EADX,CAFgB,CAAlB;EAOA,OAAOY,GAAG,CAACI,IAAJ,CAASC,MAAhB;AACD,CAdD;;AAgBA,MAAMC,OAAO,GAAG,YAAY;EAC1B,MAAMN,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,4BAAV,EAAwC;IACxDC,OAAO,EAAE;MAAEC,aAAa,EAAE,YAAYf,mBAAmB;IAAhD;EAD+C,CAAxC,CAAlB;EAIA,OAAOY,GAAG,CAACI,IAAX;AACD,CAND;;AAQA,MAAMG,KAAK,GAAG,MAAOC,IAAP,IAAgB;EAC5B,OAAO,MAAMrB,KAAK,CAACsB,IAAN,CAAW,gCAAX,EAA6CD,IAA7C,CAAb;AACD,CAFD;;AAIA,MAAME,QAAQ,GAAG,MAAON,IAAP,IAAgB;EAC/B,OAAO,MAAMjB,KAAK,CAACsB,IAAN,CAAW,8BAAX,EAA2CL,IAA3C,EAAiD;IAC5DF,OAAO,EAAE;MAAEC,aAAa,EAAE,YAAYf,mBAAmB;IAAhD;EADmD,CAAjD,CAAb;AAGD,CAJD;;AAKA,MAAMuB,UAAU,GAAG,MAAOC,KAAP,IAAiB;EAClC,OAAO,MAAMzB,KAAK,CAAC0B,MAAN,CACV,gCAA+BD,KAAK,CAACE,EAAG,IAAGF,KAAK,CAACG,SAAU,EADjD,EAEX;IAAEb,OAAO,EAAE;MAAEC,aAAa,EAAE,YAAYf,mBAAmB;IAAhD;EAAX,CAFW,CAAb;AAID,CALD;;AAOA,MAAM4B,QAAQ,GAAG,MAAOJ,KAAP,IAAiB;EAChC,OAAO,MAAMzB,KAAK,CAACsB,IAAN,CACV,gCAA+BG,KAAK,CAACE,EAAG,WAD9B,EAEX,IAFW,EAGX;IAAEZ,OAAO,EAAE;MAAEC,aAAa,EAAE,YAAYf,mBAAmB;IAAhD;EAAX,CAHW,CAAb;AAKD,CAND;;AAQA,MAAM6B,MAAM,GAAG,MAAOL,KAAP,IAAiB;EAC9B,OAAO,MAAMzB,KAAK,CAACsB,IAAN,CACV,gCAA+BG,KAAK,CAACE,EAAG,SAD9B,EAEX,IAFW,EAGX;IAAEZ,OAAO,EAAE;MAAEC,aAAa,EAAE,YAAYf,mBAAmB;IAAhD;EAAX,CAHW,CAAb;AAKD,CAND;;AAQA,MAAM8B,GAAG,GAAG;EACV1B,SADU;EAEVkB,QAFU;EAGVJ,OAHU;EAIVC,KAJU;EAKVI,UALU;EAMVK,QANU;EAOVC;AAPU,CAAZ;AAUA,eAAeC,GAAf"},"metadata":{},"sourceType":"module"}