{"ast":null,"code":"import axios from \"axios\";\nimport { getTokenFromStorage } from \"../helpers\";\nconst api = {\n  getQuotes: async function () {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let paramsStr = \"\";\n    Object.keys(params).forEach(key => {\n      var _params$key;\n\n      paramsStr = paramsStr + key + \"=\" + ((_params$key = params[key]) === null || _params$key === void 0 ? void 0 : _params$key.join(\",\")) + \"&\";\n    });\n    const res = await axios.get(`http://localhost:8000/quotes${paramsStr && \"?\" + paramsStr}`, {\n      headers: {\n        Authorization: \"Bearer \" + getTokenFromStorage()\n      }\n    });\n    return res.data.quotes;\n  },\n  getTags: async () => {\n    const res = await axios.get(\"http://localhost:8000/tags\", {\n      headers: {\n        Authorization: \"Bearer \" + getTokenFromStorage()\n      }\n    });\n    return res.data;\n  },\n  login: async user => {\n    return await axios.post(\"http://localhost:8000/sessions\", user);\n  },\n  addQuote: async data => {\n    return await axios.post(\"http://localhost:8000/quotes\", data, {\n      headers: {\n        Authorization: \"Bearer \" + getTokenFromStorage()\n      }\n    });\n  },\n  deleteVote: async quote => {\n    return await axios.delete(`http://localhost:8000/quotes/${quote.id}/${quote.givenVote}`, {\n      headers: {\n        Authorization: \"Bearer \" + getTokenFromStorage()\n      }\n    });\n  },\n  downVote: async quote => {\n    return await axios.post(`http://localhost:8000/quotes/${quote.id}/downvote`, null, {\n      headers: {\n        Authorization: \"Bearer \" + getTokenFromStorage()\n      }\n    });\n  },\n  upVote: async quote => {\n    return await axios.post(`http://localhost:8000/quotes/${quote.id}/upvote`, null, {\n      headers: {\n        Authorization: \"Bearer \" + getTokenFromStorage()\n      }\n    });\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","getTokenFromStorage","api","getQuotes","params","paramsStr","Object","keys","forEach","key","join","res","get","headers","Authorization","data","quotes","getTags","login","user","post","addQuote","deleteVote","quote","delete","id","givenVote","downVote","upVote"],"sources":["/home/dzelal/Desktop/DzelalDesktop/reactFolder/qoutes-app-inter/src/api/index.js"],"sourcesContent":["import axios from \"axios\";\nimport { getTokenFromStorage } from \"../helpers\";\n\nconst api = {\n  getQuotes: async (params = {}) => {\n    let paramsStr = \"\";\n    Object.keys(params).forEach((key) => {\n      paramsStr = paramsStr + key + \"=\" + params[key]?.join(\",\") + \"&\";\n    });\n    const res = await axios.get(\n      `http://localhost:8000/quotes${paramsStr && \"?\" + paramsStr}`,\n      {\n        headers: { Authorization: \"Bearer \" + getTokenFromStorage() },\n      }\n    );\n\n    return res.data.quotes;\n  },\n\n  getTags: async () => {\n    const res = await axios.get(\"http://localhost:8000/tags\", {\n      headers: { Authorization: \"Bearer \" + getTokenFromStorage() },\n    });\n\n    return res.data;\n  },\n\n  login: async (user) => {\n    return await axios.post(\"http://localhost:8000/sessions\", user);\n  },\n\n  addQuote: async (data) => {\n    return await axios.post(\"http://localhost:8000/quotes\", data, {\n      headers: { Authorization: \"Bearer \" + getTokenFromStorage() },\n    });\n  },\n  deleteVote: async (quote) => {\n    return await axios.delete(\n      `http://localhost:8000/quotes/${quote.id}/${quote.givenVote}`,\n      { headers: { Authorization: \"Bearer \" + getTokenFromStorage() } }\n    );\n  },\n\n  downVote: async (quote) => {\n    return await axios.post(\n      `http://localhost:8000/quotes/${quote.id}/downvote`,\n      null,\n      { headers: { Authorization: \"Bearer \" + getTokenFromStorage() } }\n    );\n  },\n\n  upVote: async (quote) => {\n    return await axios.post(\n      `http://localhost:8000/quotes/${quote.id}/upvote`,\n      null,\n      { headers: { Authorization: \"Bearer \" + getTokenFromStorage() } }\n    );\n  },\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,YAApC;AAEA,MAAMC,GAAG,GAAG;EACVC,SAAS,EAAE,kBAAuB;IAAA,IAAhBC,MAAgB,uEAAP,EAAO;IAChC,IAAIC,SAAS,GAAG,EAAhB;IACAC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA6BC,GAAD,IAAS;MAAA;;MACnCJ,SAAS,GAAGA,SAAS,GAAGI,GAAZ,GAAkB,GAAlB,mBAAwBL,MAAM,CAACK,GAAD,CAA9B,gDAAwB,YAAaC,IAAb,CAAkB,GAAlB,CAAxB,IAAiD,GAA7D;IACD,CAFD;IAGA,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CACf,+BAA8BP,SAAS,IAAI,MAAMA,SAAU,EAD5C,EAEhB;MACEQ,OAAO,EAAE;QAAEC,aAAa,EAAE,YAAYb,mBAAmB;MAAhD;IADX,CAFgB,CAAlB;IAOA,OAAOU,GAAG,CAACI,IAAJ,CAASC,MAAhB;EACD,CAdS;EAgBVC,OAAO,EAAE,YAAY;IACnB,MAAMN,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,4BAAV,EAAwC;MACxDC,OAAO,EAAE;QAAEC,aAAa,EAAE,YAAYb,mBAAmB;MAAhD;IAD+C,CAAxC,CAAlB;IAIA,OAAOU,GAAG,CAACI,IAAX;EACD,CAtBS;EAwBVG,KAAK,EAAE,MAAOC,IAAP,IAAgB;IACrB,OAAO,MAAMnB,KAAK,CAACoB,IAAN,CAAW,gCAAX,EAA6CD,IAA7C,CAAb;EACD,CA1BS;EA4BVE,QAAQ,EAAE,MAAON,IAAP,IAAgB;IACxB,OAAO,MAAMf,KAAK,CAACoB,IAAN,CAAW,8BAAX,EAA2CL,IAA3C,EAAiD;MAC5DF,OAAO,EAAE;QAAEC,aAAa,EAAE,YAAYb,mBAAmB;MAAhD;IADmD,CAAjD,CAAb;EAGD,CAhCS;EAiCVqB,UAAU,EAAE,MAAOC,KAAP,IAAiB;IAC3B,OAAO,MAAMvB,KAAK,CAACwB,MAAN,CACV,gCAA+BD,KAAK,CAACE,EAAG,IAAGF,KAAK,CAACG,SAAU,EADjD,EAEX;MAAEb,OAAO,EAAE;QAAEC,aAAa,EAAE,YAAYb,mBAAmB;MAAhD;IAAX,CAFW,CAAb;EAID,CAtCS;EAwCV0B,QAAQ,EAAE,MAAOJ,KAAP,IAAiB;IACzB,OAAO,MAAMvB,KAAK,CAACoB,IAAN,CACV,gCAA+BG,KAAK,CAACE,EAAG,WAD9B,EAEX,IAFW,EAGX;MAAEZ,OAAO,EAAE;QAAEC,aAAa,EAAE,YAAYb,mBAAmB;MAAhD;IAAX,CAHW,CAAb;EAKD,CA9CS;EAgDV2B,MAAM,EAAE,MAAOL,KAAP,IAAiB;IACvB,OAAO,MAAMvB,KAAK,CAACoB,IAAN,CACV,gCAA+BG,KAAK,CAACE,EAAG,SAD9B,EAEX,IAFW,EAGX;MAAEZ,OAAO,EAAE;QAAEC,aAAa,EAAE,YAAYb,mBAAmB;MAAhD;IAAX,CAHW,CAAb;EAKD;AAtDS,CAAZ;AAyDA,eAAeC,GAAf"},"metadata":{},"sourceType":"module"}